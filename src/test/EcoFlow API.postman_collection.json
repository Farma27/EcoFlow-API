{
	"info": {
		"_postman_id": "97ddc61d-c869-4858-9b79-65c185b416a4",
		"name": "EcoFlow API",
		"description": "Postman collection to test EcoFlow API handlers",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Register User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"const responseJson = pm.response.json();",
							"pm.environment.set(\"userId\", responseJson.data.userId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"username\": \"testuser\", \"password\": \"testpassword\"}"
				},
				"url": {
					"raw": "http://{{url}}:{{port}}/register",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const responseJson = pm.response.json();",
							"pm.environment.set(\"token\", responseJson.token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"username\": \"testuser\", \"password\": \"testpassword\"}"
				},
				"url": {
					"raw": "http://{{url}}:{{port}}/login",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const responseJson = pm.response.json();",
							"pm.test(\"Response contains users\", function () {",
							"    pm.expect(responseJson.data).to.have.property('users');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"url": {
					"raw": "http://{{url}}:{{port}}/users/all",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"users",
						"all"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const responseJson = pm.response.json();",
							"pm.test(\"Response contains user data\", function () {",
							"    pm.expect(responseJson.data).to.have.property('user');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"url": {
					"raw": "http://{{url}}:{{port}}/user/{{userId}}",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"user",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"username\": \"updateduser\", \"password\": \"updatedpassword\"}"
				},
				"url": {
					"raw": "http://{{url}}:{{port}}/user/edit/{{userId}}",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"user",
						"edit",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"url": {
					"raw": "http://{{url}}:{{port}}/user/delete/{{userId}}",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"user",
						"delete",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Upload Image",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const responseJson = pm.response.json();",
							"pm.test(\"Response contains file data\", function () {",
							"    pm.expect(responseJson.data).to.have.property('fileName');",
							"    pm.expect(responseJson.data).to.have.property('url');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "image",
							"type": "file",
							"src": "bad-request.jpg"
						}
					]
				},
				"url": {
					"raw": "http://{{url}}:{{port}}/upload",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"upload"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Article",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"const responseJson = pm.response.json();",
							"pm.environment.set(\"articleId\", responseJson.data.articleId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Article Title",
							"type": "text"
						},
						{
							"key": "content",
							"value": "Article content",
							"type": "text"
						},
						{
							"key": "image",
							"type": "file",
							"src": "/path/to/your/image.jpg"
						}
					]
				},
				"url": {
					"raw": "http://{{url}}:{{port}}/article/create",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"article",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit Article",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Updated Title",
							"type": "text"
						},
						{
							"key": "content",
							"value": "Updated content",
							"type": "text"
						},
						{
							"key": "image",
							"type": "file",
							"src": "/path/to/your/image.jpg"
						}
					]
				},
				"url": {
					"raw": "http://{{url}}:{{port}}/article/edit/{{articleId}}",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"article",
						"edit",
						"{{articleId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Articles",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const responseJson = pm.response.json();",
							"pm.test(\"Response contains articles\", function () {",
							"    pm.expect(responseJson.data).to.have.property('articles');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "default"
					}
				],
				"url": {
					"raw": "http://{{url}}:{{port}}/articles/all",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"articles",
						"all"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Article by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const responseJson = pm.response.json();",
							"pm.test(\"Response contains article data\", function () {",
							"    pm.expect(responseJson.data).to.have.property('article');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{url}}:{{port}}/article/{{articleId}}",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"article",
						"{{articleId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Article",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"url": {
					"raw": "http://{{url}}:{{port}}/article/delete/{{articleId}}",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"article",
						"delete",
						"{{articleId}}"
					]
				}
			},
			"response": []
		},
				{
			"name": "Predict Waste Type",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const responseJson = pm.response.json();",
							"pm.test(\"Response contains predictions\", function () {",
							"    pm.expect(responseJson).to.have.property('predictions');",
							"    pm.expect(responseJson.predictions).to.be.an('array');",
							"    pm.expect(responseJson.predictions).to.have.lengthOf(2);",
							"    pm.expect(responseJson.predictions[0]).to.have.property('model');",
							"    pm.expect(responseJson.predictions[0]).to.have.property('predictedClass');",
							"    pm.expect(responseJson.predictions[1]).to.have.property('model');",
							"    pm.expect(responseJson.predictions[1]).to.have.property('predictedClass');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "<path_to_your_sample_image>"
						}
					]
				},
				"url": {
					"raw": "http://{{url}}:{{port}}/predict",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"predict"
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.environment.unset(\"token\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"url": {
					"raw": "http://{{url}}:{{port}}/logout",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"logout"
					]
				}
			},
			"response": []
		}
	]
}