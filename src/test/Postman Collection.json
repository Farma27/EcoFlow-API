{
  "info": {
    "name": "EcoFlow API",
    "_postman_id": "12345678-1234-1234-1234-123456789012",
    "description": "Postman collection to test EcoFlow API handlers",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Register User",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"username\": \"testuser\", \"password\": \"testpassword\"}"
        },
        "url": {
          "raw": "http://{{url}}:{{port}}/register",
          "protocol": "http",
          "host": ["{{url}}"],
          "port": "{{port}}",
          "path": ["register"]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "",
              "const responseJson = pm.response.json();",
              "pm.environment.set(\"userId\", responseJson.data.userId);"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Register User with Duplicate Username",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"username\": \"testuser\", \"password\": \"testpassword\"}"
        },
        "url": {
          "raw": "http://{{url}}:{{port}}/register",
          "protocol": "http",
          "host": ["{{url}}"],
          "port": "{{port}}",
          "path": ["register"]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 409\", function () {",
              "    pm.response.to.have.status(409);",
              "});",
              "",
              "const responseJson = pm.response.json();",
              "pm.test(\"Response message is 'Username already exists!'\", function () {",
              "    pm.expect(responseJson.message).to.eql('Username already exists!');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Register User with Empty Username",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"username\": \"\", \"password\": \"testpassword\"}"
        },
        "url": {
          "raw": "http://{{url}}:{{port}}/register",
          "protocol": "http",
          "host": ["{{url}}"],
          "port": "{{port}}",
          "path": ["register"]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 400\", function () {",
              "    pm.response.to.have.status(400);",
              "});",
              "",
              "const responseJson = pm.response.json();",
              "pm.test(\"Response message is 'Username or password are required!'\", function () {",
              "    pm.expect(responseJson.message).to.eql('Username or password are required!');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Register User with Empty Password",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"username\": \"testuser2\", \"password\": \"\"}"
        },
        "url": {
          "raw": "http://{{url}}:{{port}}/register",
          "protocol": "http",
          "host": ["{{url}}"],
          "port": "{{port}}",
          "path": ["register"]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 400\", function () {",
              "    pm.response.to.have.status(400);",
              "});",
              "",
              "const responseJson = pm.response.json();",
              "pm.test(\"Response message is 'Username or password are required!'\", function () {",
              "    pm.expect(responseJson.message).to.eql('Username or password are required!');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Login User",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"username\": \"testuser\", \"password\": \"testpassword\"}"
        },
        "url": {
          "raw": "http://{{url}}:{{port}}/login",
          "protocol": "http",
          "host": ["{{url}}"],
          "port": "{{port}}",
          "path": ["login"]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "const responseJson = pm.response.json();",
              "pm.environment.set(\"token\", responseJson.token);"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Get All Users",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{token}}"
          }
        ],
        "url": {
          "raw": "http://{{url}}:{{port}}/users",
          "protocol": "http",
          "host": ["{{url}}"],
          "port": "{{port}}",
          "path": ["users"]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "const responseJson = pm.response.json();",
              "pm.test(\"Response contains registered user without password\", function () {",
              "    pm.expect(responseJson.data.users.some(user => user.username === 'testuser' && !user.password)).to.be.true;",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Update User",
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{token}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"username\": \"updateduser\", \"password\": \"updatedpassword\"}"
        },
        "url": {
          "raw": "http://{{url}}:{{port}}/users/{{userId}}",
          "protocol": "http",
          "host": ["{{url}}"],
          "port": "{{port}}",
          "path": ["users", "{{userId}}"]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Delete User",
      "request": {
        "method": "DELETE",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{token}}"
          }
        ],
        "url": {
          "raw": "http://{{url}}:{{port}}/users/{{userId}}",
          "protocol": "http",
          "host": ["{{url}}"],
          "port": "{{port}}",
          "path": ["users", "{{userId}}"]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Logout User",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{token}}"
          }
        ],
        "url": {
          "raw": "http://{{url}}:{{port}}/logout",
          "protocol": "http",
          "host": ["{{url}}"],
          "port": "{{port}}",
          "path": ["logout"]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.environment.unset(\"token\");"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Upload Image",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{token}}"
          }
        ],
        "body": {
          "mode": "formdata",
          "formdata": [
            {
              "key": "image",
              "type": "file",
              "src": "/path/to/your/image.jpg"
            }
          ]
        },
        "url": {
          "raw": "http://{{url}}:{{port}}/upload",
          "protocol": "http",
          "host": ["{{url}}"],
          "port": "{{port}}",
          "path": ["upload"]
        }
      },
      "response": []
    }
  ]
}